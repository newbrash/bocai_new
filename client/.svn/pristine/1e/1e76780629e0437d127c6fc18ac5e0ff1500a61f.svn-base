<template>
  <div style="border: 0px solid green;background:#E7E7E7;min-height:100vh;">
    <mt-header id="header" title="聊天室" fixed="true" style="height:10vw;background:#57D6DD;">
      <router-link to="/" slot="left">
        <mt-button icon="back">返回</mt-button>
      </router-link>
    </mt-header>
    <div class="pageContent chat" id="centerbox">
      <div v-for="(item,index) in MsgList" :key="index">
        <!-- 时间 -->
        <p style="text-align:center;font-size:3vw;color:#999;margin-top:10px;" v-if="showchatRecordsDate(index)">{{showchatRecordsDate(index)}}</p>
        <!-- 聊条消息 -->
        <div v-if="item.status >= 0" style="display: flex;" :class="item.send_id==self_id?('myList list'):('list')">
          <!-- 我方头像 -->
          <!-- <div class="head" v-if="item.send_id==self_id">
              <img v-bind:src="host + selfHead">
            </div> -->
          <!-- 对方头像 -->
          <div>
            <div class="head">
              <img v-bind:src="host + item.head">
            </div>
            <span class="usernickname-box">{{item.nickname}}</span>
          </div>
          <!-- 红包消息 -->
          <div v-if="item.status == 1" class="msgText redbag-info-box">
            <p @click="lookRedbag(checkRedBag(item.content, 1, index), index)" id="transfer-account-box">
              <span class="transfer-account-box-info">
                <!-- <img :src="redbagsrc[Math.abs(checkRedBag(item.content, 1, index))]" alt="" style="width:9.5vw;height:12vw"> -->
                <img src="static/open.png" alt="" style="width:9.5vw;height:12vw">
                <span style="width:auto;">
                  <p style="font-size:4vw;">{{checkRedBag(item.content,2, index)}}</p>
                  <p style="font-size:3vw;">{{redbagtips[index]}}</p>
                </span>
              </span>
              <span class="transfer-account-box-tips">
                <p>红包</p>
              </span>
            </p>
            <div :class="item.send_id==self_id?('myboo transfer-myboo'):('boo transfer-boo')"></div>
            <!-- 我方发送失败 -->
            <span class="send_fail_tips" v-if="item.send_id==self_id && !item.send_status==2">!</span>
          </div>
          <!-- 语音消息 -->
          <div v-else-if="item.status == 2"></div>
          <!-- 照片消息 -->
          <div v-else-if="item.status == 3"></div>
          <!-- 视频消息 -->
          <div v-else-if="item.status == 4"></div>
          <!-- 普通消息(文字聊天) -->
          <div v-else class="msgText">
            <p v-html="item.content"></p>
            <div :class="item.send_id==self_id?('myboo'):('boo')"></div>
            <!-- 我方发送失败 -->
            <span class="send_fail_tips" v-if="item.send_id==self_id&&item.send_status == 2">!</span>
          </div>
        </div>
        <!-- 系统提示 -->
        <div v-else class="addTips">
          <p style="text-align:center;color:#999;font-size:4vw;">{{item.content}}</p>
        </div>
      </div>
    </div>
    <section class="user">
      <!-- 发送信息 -->
      <div id="footer">
        <div class="voiceBtn sendBox" style="width: 12vw;">
          <img v-if="voice" src="../../assets/语音2.svg" alt="" @click="sendVoice(true)">
          <img v-else src="../../assets/语音1.svg" alt="" @click="sendVoice(false)">
        </div>
        <div class="content sendBox">
          <input id="audioInput" type="file" accept="audio/*" capture="microphone" style="opacity:0;position:absolute;z-index:-1; ">
          <button v-if="voice" class="voiceStartBtn" id="audioBtn">按住开始说话</button>
          <div v-else class="contentBox" @focus="foucuson" id="MSGCONTENT" name="" cols="30" rows="10" contenteditable="true" @keyup="msgContent" @blur="loseFocus">
          </div>
        </div>
        <div class="BTNBOX sendBox">
          <img v-if="!faceshow" src="../../assets/表情1.svg" alt="" @click="showface">
          <img v-else src="../../assets/表情2.svg" alt="" @click="showface">
          <button v-if="myMsg&&!funboxshow" @click="send">发送</button>
          <img v-else-if="!myMsg&&!funboxshow" src="../../assets/chatadd.svg" alt="" style="margin-left:1.5vw;" @click="showFun">
          <img v-else src="../../assets/加.svg" alt="" style="margin-left:1.5vw;" @click="showFun">
        </div>
      </div>
      <!-- 扩展功能 -->
      <div v-if="funboxshow">
        <ul class="proccessbox">
          <li>
            <router-link :to="{path:'/sendredbag', query:{rType:true}}">
              <img src="static/icon-red@chat.png" alt="">
              <span>发红包</span>
            </router-link>
          </li>
          <!-- <li>
            <router-link to="/transacount">
              <img src="static/icon-transfer.png" alt="">
              <span>转账</span>
            </router-link>
          </li> -->
          <li>
            <img src="static/icon-photo.png" alt="">
            <span>图片</span>
          </li>
        </ul>
      </div>
      <!-- 表情包 -->
      <div v-if="faceshow">
        <ul class="facesBox">
          <li v-for="(item,index) in faces" v-bind:key="index" v-if="item">
            <img :src="item" alt="" @click="addFaceToContent(index)">
          </li>
        </ul>
        <div style="clear:both;margin-bottom:2vw;"></div>
      </div>
    </section>
    <!-- 领红包 -->
    <section v-show="redbagShow" class="open-redbag-box-background"></section>
    <div v-show="redbagShow" class="open-redbag-box">
      <div class="userInfo-box">
        <div class="user-head-box">
          <img :src="host + this.GLOBAL.userInfo.head" alt="">
        </div>
        <p class="user-name-box">{{this.GLOBAL.userInfo.nickname}}</p>
        <p class="user-title-box">给您发了一个红包</p>
        <p class="user-remark-box">恭喜发财，大吉大利</p>
      </div>
      <span class="close-btn" @click="closeRedbagBox">x</span>
      <div class="max-circle-box"></div>
      <span class="min-circle-box-back"></span>
      <span class="min-circle-box" @click="reciveRedbag">拆红包</span>
    </div>
    <section id="show-record-box"></section>
  </div>
</template>

<script>
console.log("COMMON_CHAT_VUE");
export default {
  data() {
    return {
      redbagsrc: [], //保存红包领取状态图片的路径
      redbagtips: [], //保存红包领取状体的提示

      MsgList: [], //消息队列

      // transferSrc: [], //保存转账的图片路径
      // red_ids: [],
      red_index: "", //拆红包的消息索引
      red_id: "", //拆红包的id
      redbagShow: false, //显示拆红包
      myMsg: "", // 发送的消息
      // head: this.GLOBAL.friendInfo.info.head, //朋友投降
      // friendInfo: this.GLOBAL.friendInfo, //朋友信息
      host: this.GLOBAL.Host, //主机或者域名
      // selfHead: this.GLOBAL.userInfo.head, //本人头像
      voice: false, //是否为语音模式
      funboxshow: false, //是否显示附加功能
      faceshow: false, //是否显示表情包
      // 表情包
      faces: [
        "static/faces/分类.svg",
        "static/faces/发呆.svg",
        "static/faces/可爱.svg",
        "static/faces/大笑.svg",
        "static/faces/失败.svg",
        "static/faces/板脸.svg",
        "static/faces/白眼.svg",
        "static/faces/笑口常开.svg",
        "static/faces/等待.svg",
        "static/faces/衰.svg",
        "static/faces/调皮.svg",
        "static/faces/难过.svg",
        "static/faces/面无表情.svg",
        "static/faces/鬼脸.svg"
      ],
      self_id: this.GLOBAL.userInfo.id,
      page: 0,
      status: 0,
      msgN: 0
    };
  },
  beforeCreate: function() {
    // this.GLOBAL.redbagsrc = [];
  },
  mounted: function() {
    // 隐藏底部导航栏
    this.$parent.tabbarShow = false;
    // 检测是否登陆
    let that = this;
    this.checkSocket(() => {
      that.getMsgList();
    });
    this.onmessage(function(data) {
      data = JSON.parse(data);
      if (data.type == "ChatRoomMsg") {
        console.log("ChatRoom => {");
        console.log(data);
        console.log("}");
        that.$set(that.MsgList, that.msgN, data.msg);
        that.msgN++;
      }
    });
  },
  updated: function() {
    this.$nextTick(() => {
      // let lastChat = document.getElementById("centerbox").lastChild;
      // if (lastChat) {
      //   lastChat.scrollIntoView(false);
      // }
      // console.log("scrollHeight:" + obj.scrollHeight);
      // console.log("offsetHeight:" + obj.offsetHeight);
      // console.log("clientHeight:" + obj.clientHeight);
      let obj = document.getElementById("centerbox");
      obj.scrollTop = obj.scrollHeight;
    });
  },
  beforeDestroy: function() {
    let data = {
      type: "leaveChatRoom",
      con_id: this.GLOBAL.connectionId
    };
    this.senddata(data);
  },
  computed: {},
  methods: {
    goto(topage) {
      this.$router.push(topage);
    },
    /**
     * 获取消息列表
     */
    getMsgList: function() {
      let data = {
        type: "getChatRoomMsgList",
        con_id: this.GLOBAL.connectionId,
        page: this.page
      };
      let that = this;
      this.senddata(
        data,
        Response => {
          if (Response.status) {
            // that.MsgList = Response.MsgList;
            that.setGlobalAttribute(that.MsgList, Response.MsgList);
            that.MsgList.reverse();
            // console.log("-------------------");
            // console.log(that.MsgList);
            // console.log("-------------------");
            that.msgN = Object.keys(that.MsgList).length;
            // if (that.$route.query.msg) {
            //   that.$set(that.MsgList, that.msgN, that.$route.query.msg);
            // }
          } else if (Response.type == "responeGetChatRoomMsgList") {
            if (Response.msg) {
              that.$messagebox.alert(Response.msg);
            } else {
              that.$messagebox.alert("网络堵塞，请检查网络是否正常！");
            }
          }
        },
        "responeGetChatRoomMsgList"
      );
    },
    /**
     * 关闭红包弹窗
     */
    closeRedbagBox: function() {
      this.redbagShow = false;
      this.red_id = "";
      this.red_index = "";
    },
    /**
     * 拆红包
     */
    reciveRedbag: function() {
      let data = {
        type: "reciveRedBagFromFriend",
        send_id: this.GLOBAL.userInfo.id,
        con_id: this.GLOBAL.connectionId,
        red_id: this.red_id,
        red_send_id: this.GLOBAL.friendInfo.info.id,
        red_send_con: this.GLOBAL.friendInfo.info.connectionID
      };
      let that = this;
      // 发送拆红包请求
      this.senddata(data, function(resopne) {
        if (resopne.status) {
          // 更新本地金币池
          that.GLOBAL.userInfo.gold = resopne.gold;
          // 更新本地用户信息
          localStorage.setItem(
            "bc_userInfo",
            JSON.stringify(that.GLOBAL.userInfo)
          );
          // 更新本地红包信息的收取状态
          that.GLOBAL.msgList[that.GLOBAL.friendInfo.info.id][that.red_index][
            "content"
          ] =
            "false:" +
            that.GLOBAL.msgList[that.GLOBAL.friendInfo.info.id][that.red_index][
              "content"
            ];
          // 隐藏红包弹窗
          that.redbagShow = false;
          // 跳转红包详情
          that.$router.push({
            path: "/redbagdetail",
            query: { red_id: that.red_id }
          });
        } else {
          // 输出提示
          that.$messagebox.alert(resopne.errMsg).then(action => {
            that.redbagShow = false;
          });
        }
      });
    },
    /**
     * 查看红包详情或者显示拆红包弹窗
     */
    lookRedbag: function(red_id, index) {
      // console.log("red_id:"+red_id);
      if (
        this.GLOBAL.userInfo.id ==
        this.GLOBAL.msgList[this.GLOBAL.friendInfo.info.id][index]["send_id"]
      ) {
        // 发红包方查看红包详情
        // this.$messagebox.alert("查看红包：" + red_id);
        this.$router.push({
          path: "/redbagdetail",
          query: { red_id: Math.abs(red_id) }
        });
      } else {
        // 收红包方点击红包信息
        if (red_id > 0) {
          // 显示拆开红包的弹窗
          this.red_id = red_id;
          this.red_index = index;
          this.redbagShow = true;
        } else {
          // 已经领取红包的情况下，跳转红包详情
          this.$router.push({
            path: "/redbagdetail",
            query: { red_id: -red_id }
          });
        }
      }
    },
    /**
     * 检测消息是否为红包信息
     * content: 消息内容
     * check: 为真时返回布尔类型，否则返回检测后的内容
     */
    checkRedBag: function(content, flag, index) {
      let rege = /^(false:|)\(@redbag([0-9]+)redbag@\)(.*)/;
      if (rege.test(content)) {
        let result = rege.exec(content);
        switch (flag) {
          case 0:
            // 只是检测是否为红包信息，是返回true
            if (result[1]) {
              // 初始化红包图片为打开状态
              this.redbagsrc[result[2]] = "static/红包.png";
              this.redbagtips[index] = "已领取";
            } else {
              // 初始化红包图片为未打开状态
              this.redbagsrc[result[2]] = "static/open.png";
              // 初始化提示语为“点击领取”
              this.redbagtips[index] = "点击领取";
            }
            return true;
            break;
          case 1:
            // 返回红包的ID
            if (result[1]) {
              // 已经领取返回负数
              return -result[2];
            } else {
              // 未领取返回正数
              return result[2];
            }
            break;
          case 2:
            // 判断是否为红包发送方;
            // if (
            //   this.GLOBAL.userInfo.id ==
            //   this.GLOBAL.msgList[this.GLOBAL.friendInfo.info.id][index][
            //     "send_id"
            //   ]
            // ) {
            //   if (result[1]) {
            //     this.redbagtips[index] = "已被领取";
            //   } else {
            //     // 若是则修改提示语为“点击查看”
            //     this.redbagtips[index] = "点击查看";
            //   }
            // }
            // 返回信息内容
            return result[3];
            break;
          default:
            this.$messagebox.alert("发生数据丢失，请谨慎操作！");
            break;
        }
      } else {
        return false;
      }
    },
    foucuson: function() {
      this.funboxshow = false;
      this.faceshow = false;
    },
    /**
     * 添加表情到内容中
     */
    addFaceToContent: function(src) {
      let obj = document.getElementById("MSGCONTENT");
      let htmlStr = obj.innerHTML;
      console.log(htmlStr);
      htmlStr +=
        "<img src='" +
        this.faces[src] +
        "' style='width:8vw;height:auto;display:inline-block;margin:0px 1vw;' align='absmiddle'>";
      obj.innerHTML = htmlStr;
      this.myMsg = htmlStr;
      this.faceshow = false;
    },
    /**
     * 表情显示或收起
     */
    showface: function() {
      this.faceshow = !this.faceshow;
      this.funboxshow = false;
      this.voice = false;
    },
    // 附加功能显示或收起
    showFun: function() {
      this.funboxshow = !this.funboxshow;
      this.faceshow = false;
      this.voice = false;
    },
    /**
     * 将发送消息绑定到变量中
     */
    msgContent: function() {
      this.myMsg = document.getElementById("MSGCONTENT").innerHTML;
    },
    loseFocus: function() {
      this.myMsg = document.getElementById("MSGCONTENT").innerHTML;
    },
    /**
     * 发送语音
     */
    sendVoice: function(status) {
      this.voice = !this.voice;
      this.funboxshow = false;
      this.faceshow = false;
      let that  = this;
      this.$nextTick(function() {
        that.VoiceJSDK.readyRecord(this,"audioBtn", "audioInput","show-record-box");
      });
    },
    /**
     * 显示聊天日期
     */
    showchatRecordsDate: function(index) {
      // 判断是否存在
      if (index - 1 >= 0) {
        return this.showDate(
          this.MsgList[index - 1].send_time,
          this.MsgList[index].send_time
        );
      } else {
        // if (this.MsgList[index].status) {
        // 聊条消息
        // if (this.MsgList[index].chatType) {
        //   // 当前聊天消息，第一条
        //   return this.showDate(
        //     this.MsgList[index].send_time
        //   );
        // } else {
        // 历史聊天消息,第一条
        return this.showDate("", this.MsgList[index].send_time);
        // }
        // } else {
        //   // 系统好友提醒消息
        //   return this.showDate(
        //     "",
        //     "",
        //     this.MsgList[index].send_time
        //   );
        // }
      }
    },
    /**
     * 发送消息
     */
    send: function() {
      if (this.myMsg) {
        // 更新本地的消息队列
        // let time = this.updateMsgList(this.myMsg);
        let msg = {
          id: "",
          send_id: this.GLOBAL.userInfo.id,
          send_time: this.showDate(),
          status: this.status,
          content: this.myMsg,
          head: this.GLOBAL.userInfo.head,
          nickname: this.GLOBAL.userInfo.nickname,
          send_status: 1
        };

        this.$set(this.MsgList, this.msgN, msg);
        let index = this.msgN;
        this.msgN++;
        // this.MsgList.push(msg);
        let data = {
          msg: msg,
          type: "ChatRoomMsg",
          con_id: this.GLOBAL.connectionId
        };
        this.senddata(data, respone => {
          if (respone.status) {
            this.MsgList[index].id = respone.id;
          } else {
            this.MsgList[index].send_status = 2;
          }
        });
        this.myMsg = "";
        document.getElementById("MSGCONTENT").innerHTML = "";
        this.faceshow = false;
        this.funboxshow = false;
      }
    }
  }
};
</script>

<style scoped>
#transfer-account-box {
  border-radius: 2vw !important;
  overflow: hidden;
}
#transfer-account-box .transfer-account-box-info {
  background: #fea405;
  display: flex;
  align-items: center;
  color: #ffffff;
  height: 15vw;
}
#transfer-account-box .transfer-account-box-info img {
  width: 9vw !important;
  height: 12vw !important;
  margin: 0vw 3vw;
}
#transfer-account-box .transfer-account-box-info span p:nth-child(1) {
  /* height: ; */
  font-size: 5vw;
  /* height: 7vw; */
  line-height: 12vw;
}
#transfer-account-box .transfer-account-box-info span p:nth-child(2) {
  font-weight: 400;
  font-size: 4vw;
}
#transfer-account-box .transfer-account-box-tips p {
  background: #ffffff !important;
  height: 5vw;
  font-size: 3vw;
  line-height: 5vw;
  color: #333333;
  box-sizing: border-box;
  padding-left: 2vw;
}

.user-name-box {
  color: #fdd496;
  font-size: 6vw;
}
.user-title-box {
  color: #cf6e51;
  font-size: 4.5vw;
  font-weight: bold;
  line-height: 9vw;
}
.user-remark-box {
  color: #fdd496;
  font-size: 6vw;
  line-height: 15vw;
}
.userInfo-box {
  position: relative;
  z-index: 99999;
}
.user-head-box {
  display: inline-block;
}
.user-head-box img {
  width: auto;
  height: 16vw;
  border-radius: 16vw;
  margin-top: 10vw;
}
.close-btn {
  position: absolute;
  z-index: 10000000;
  left: 4vw;
  top: 1vw;
  font-size: 7vw;
}
.open-redbag-box-background {
  position: fixed;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  background: black;
  opacity: 0.2;
  filter: opacity(8);
  z-index: 1000;
}
.open-redbag-box {
  width: 80vw;
  height: 100vw;
  margin: auto;
  position: fixed;
  top: 15vw;
  left: 10vw;
  z-index: 1001;
  background: #aa4132;
  opacity: 1;
  filter: opacity(1);
  border-radius: 4vw;
  overflow: hidden;
}
.max-circle-box {
  position: absolute;
  left: -17vw;
  top: -17vw;
  z-index: 1005;
  width: 110vw;
  height: 110vw;
  border-radius: 0vw 0vw 100vw 0vw;
  background: #c44d38;
  transform: rotate(43deg);
  -ms-transform: rotate(43deg);
  -moz-transform: rotate(43deg);
  -webkit-transform: rotate(43deg);
  -o-transform: rotate(43deg);
  border: 2vw solid #a13826;
}
.min-circle-box-back {
  display: block;
  width: 26vw;
  height: 26vw;
  border-radius: 24vw;
  position: absolute;
  top: 65vw;
  left: 28.002vw;
  z-index: 1003;
  background: #a13826;
  border: 0px;
}
.min-circle-box {
  display: block;
  width: 22vw;
  height: 22vw;
  border-radius: 22vw;
  line-height: 22vw;
  background: #fdb852;
  margin: 2vw auto;
  text-align: center;
  color: #cd7241;
  font-weight: bold;
  font-size: 5vw;
  position: absolute;
  top: 65vw;
  left: 30.002vw;
  z-index: 1006;
}
.facesBox {
  width: 100vw;
  border-top: 1px solid #ccc;
}
.facesBox li {
  float: left;
  margin-left: 2vw;
  height: auto;
}
.facesBox li img {
  width: 7vw;
  margin-top: 1vw;
}
.proccessbox {
  display: flex;
  width: 100vw;
  border-top: 1px solid #ccc;
}
.proccessbox li {
  width: 16vw;
  /* border: 1px solid red; */
  text-align: center;
  /* height: 17vw; */
}
.proccessbox li img {
  height: 10vw;
  width: auto;
  margin: 1vw auto 0px;
}
.proccessbox li span {
  font-size: 4vw;
}
#footer {
  height: 15vw;
}
.voiceStartBtn {
  width: 100%;
  height: 10vw;
  margin-top: 2.5vw;
  background: #eef;
  border-radius: 10vw;
  outline: none;
  border: 1.5px solid #ccc;
  font-size: 4vw;
}
.send_fail_tips {
  color: red;
  position: absolute;
  top: 4vw;
  left: -2vw;
  font-size: 6vw;
  font-weight: bold;
}
.user {
  /* height: 15vw; */
  position: fixed;
  bottom: 0px;
  /* top: 100vh; */
  left: 0px;
  width: 100%;
  font-size: 5vw;
  background: white;
  z-index: 20;
}
.user .sendBox {
  float: left;
}
.user .voiceBtn {
  width: 12vw;
  height: 15vw;
  padding: 0px;
}
.user .voiceBtn img {
  width: auto;
  height: 9vw;
  margin: 3vw auto;
}
.user .content {
  width: 63.5vw;
  height: 15vw;
  margin-right: 1.5vw;
}
.user .content .contentBox {
  width: 100%;
  box-sizing: border-box;
  height: 10vw;
  margin-top: 2.5vw;
  border: 1.5px solid #ccc;
  border-radius: 10px;
  outline: none;
  resize: none;
  padding: 5px;
  font-size: 4vw;
  text-align: left;
  overflow: hidden;
  overflow-y: auto;
}
.user .BTNBOX {
  width: 22vw;
  height: 15vw;
}
.user .BTNBOX img {
  float: left;
  width: 8vw;
  height: auto;
  margin-top: 3.5vw;
  margin-left: 0.6vw;
}
.user .BTNBOX button {
  width: 12vw;
  height: 7vw;
  margin: 4vw 0.5vw;
  font-size: 3.5vw;
  
}

.userContent {
  height: 100%;
  border-top: 1px solid #999;
  display: flex;
  justify-content: space-between;
}
#sendText {
  width: 80%;
}
.send {
  width: 20%;
}

.chat {
  overflow: hidden;
  overflow-y: auto;
  box-sizing: border-box;
  height: 100vh;
  text-align: left;
  position: absolute;
  /* position: fixed; */
  left: 0px;
  top: 0px;
  width: 100vw;
  /* padding: 5px 10px; */
  padding-top: 10vw;
  padding-bottom: 15vw;
}
/* #chat {
  margin-top: 10vw;
  margin-bottom: 15vw;
} */
.list {
  padding: 10px 0;
  flex-wrap: nowrap;
}
.head {
  width: 11vw;
  height: 11vw;
  border-radius: 100%;
  overflow: hidden;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  justify-items: center;
}
.head img {
  width: auto;
  height: 100%;
  margin: auto;
}
.usernickname-box {
  font-size: 2vw;
  width: 11vw;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.msgText {
  font-size: 4vw;
  padding: 1.5vw 2.5vw;
  max-width: 60%;
  background-color: #fff;
  border-radius: 2vw;
  position: relative;
  margin-left: 3vw;
  line-height: 8vw;
  word-wrap: break-word;
  word-break: break-all;
  /* overflow: hidden; */
}
.msgText p,
.msgText p * {
  /* padding-top: 5px; */
  word-wrap: break-word;
  word-break: break-all;
}
.msgText p * {
  width: 100%;
  /* border: 1px solid red; */
}
.boo {
  position: absolute;
  width: 0;
  height: 0;
  border-top: 1.5vw solid transparent;
  border-right: 3vw solid #fff;
  border-bottom: 1.5vw solid transparent;
  border-left: 3vw solid transparent;
  top: 4.5vw;
  left: -6vw;
}
.myList {
  flex-direction: row-reverse;
}
.myList .msgText {
  margin-left: 0;
  margin-right: 20px;
  background-color: #57d6dd;
  color: #fff;
}
.myList .myboo {
  position: absolute;
  width: 0;
  height: 0;
  border-top: 1.5vw solid transparent;
  border-right: 3vw solid transparent;
  border-bottom: 1.5vw solid transparent;
  border-left: 3vw solid #57d6dd;
  top: 4.5vw;
  right: -6vw;
}
.transfer-info-box,
.redbag-info-box {
  padding: 0px;
  width: 100% !important;
}
.transfer-boo,
.redbagboo {
  border-right: 3vw solid #fea405 !important;
}
.redbagmyboo,
.transfer-myboo {
  border-left: 3vw solid #fea405 !important;
}
</style>


